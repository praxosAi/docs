{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.praxos.ai"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/environments": {
      "post": {
        "summary": "Create a new environment",
        "description": "Creates a new environment, the name of the environment is required and must be unique",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the environment"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the environment"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Environment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all environments",
        "description": "Retrieves environment(s) based on the provided query parameters. if the id or name is provided, the environment with the given id or name will be returned. if no parameters are provided, all environments will be returned as a list of environments.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "ID of the environment"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Name of the environment"
          }
        ],
        "responses": {
          "200": {
            "description": "List of environments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sources": {
      "post": {
        "summary": "Create a new source",
        "description": "Create a new source by uploading a file, JSON data, or conversation",
        "parameters": [
          {
            "name": "environment_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the environment to create the source in"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["conversation"]
            },
            "description": "Type of source to create (only required for conversation type)"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "File to upload (PDF, DOC, DOCX, or JSON)"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the source"
                  },
                  "description": {
                    "type": "string",
                    "description": "Optional description of the source"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "JSON data to store"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the source"
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional description of the source"
                      }
                    },
                    "required": ["data"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "messages": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "description": "Role of the message sender"
                            },
                            "content": {
                              "type": "string",
                              "description": "Content of the message"
                            },
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp of the message"
                            }
                          },
                          "required": ["content"]
                        },
                        "description": "Array of conversation messages"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the source"
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional description of the source"
                      }
                    },
                    "required": ["messages"]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Source created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all sources",
        "description": "Get source(s) based on the provided query parameters. if the id or name is provided, the source with the given id or name will be returned. if no parameters are provided, all sources will be returned as a list of sources.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "environment_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the environment to list sources from"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "ID of the source"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Name of the source"
          }
        ],
        "responses": {
          "200": {
            "description": "Response model could be a list of sources or a single source depending on the query parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
    "/plant/webhook": {
      "post": {
        "description": "Information about a new plant added to the store",
        "requestBody": {
          "description": "Plant added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          }
        },
        "required": ["error"]
      },
      "Environment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the environment"
          },
          "name": {
            "type": "string",
            "description": "Name of the environment"
          },
          "description": {
            "type": "string",
            "description": "Description of the environment"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp of the environment"
          }
        },
        "required": ["id", "name", "created_at"]
      },
      "Source": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the source"
          },
          "name": {
            "type": "string",
            "description": "Name of the source"
          },
          "environment_id": {
            "type": "string",
            "description": "ID of the environment this source belongs to"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "description": {
            "type": "string",
            "description": "Optional description of the source"
          },
          "status": {
            "type": "string",
            "description": "Current status of the source"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "API-key",
        "description": "API key for authentication"
      }
    }
  }
}